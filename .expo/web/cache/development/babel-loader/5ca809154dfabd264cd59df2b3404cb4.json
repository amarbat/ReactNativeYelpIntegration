{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport yelp from \"../api/yelp\";\nexport default (function () {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  var searchApi = function searchApi(searchTerm) {\n    var response;\n    return _regeneratorRuntime.async(function searchApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(yelp.get('/search', {\n              params: {\n                limit: 50,\n                searchTerm: searchTerm,\n                location: 'New York'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            console.log(response);\n            setResults(response.data.businesses);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            setErrorMessage('Something went wrong');\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    searchApi('pasta');\n  }, []);\n  return [searchApi, results, errorMessage];\n});","map":{"version":3,"sources":["/Users/amarbat/Documents/Hicheel/Hobby/Udemy/ReactNative/Restaurant/food/src/hooks/useResults.js"],"names":["useEffect","useState","yelp","results","setResults","errorMessage","setErrorMessage","searchApi","searchTerm","get","params","limit","location","response","console","log","data","businesses"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP;AAEA,gBAAe,YAAM;AAAA,kBACWD,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,MACZE,OADY;AAAA,MACHC,UADG;;AAAA,mBAEqBH,QAAQ,CAAC,EAAD,CAF7B;AAAA;AAAA,MAEZI,YAFY;AAAA,MAEEC,eAFF;;AAInB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAMC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGSN,IAAI,CAACO,GAAL,CAAS,SAAT,EAAoB;AACzCC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,KAAK,EAAE,EADD;AAENH,gBAAAA,UAAU,EAAVA,UAFM;AAGNI,gBAAAA,QAAQ,EAAE;AAHJ;AADiC,aAApB,CAHT;;AAAA;AAGRC,YAAAA,QAHQ;AAUdC,YAAAA,OAAO,CAACC,GAAR,CAAaF,QAAb;AACAT,YAAAA,UAAU,CAACS,QAAQ,CAACG,IAAT,CAAcC,UAAf,CAAV;AAXc;AAAA;;AAAA;AAAA;AAAA;AAcdX,YAAAA,eAAe,CAAC,sBAAD,CAAf;;AAdc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAkBAN,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,SAAS,CAAC,OAAD,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,CAACA,SAAD,EAAYJ,OAAZ,EAAqBE,YAArB,CAAP;AACD,CA3BD","sourcesContent":["import { useEffect, useState } from 'react';\nimport yelp from '../api/yelp';\n\nexport default () => {\n  const [results, setResults] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const searchApi = async searchTerm => {\n    try {\n      // -- make request\n      const response = await yelp.get('/search', {\n        params: {\n          limit: 50,\n          searchTerm,\n          location: 'New York'\n        }\n      });\n      console.log (response);\n      setResults(response.data.businesses);\n    }\n    catch (err) {\n      setErrorMessage('Something went wrong');\n    }\n  };\n\n  useEffect(() => {\n    searchApi('pasta');\n  }, []);\n\n  return [searchApi, results, errorMessage];\n}"]},"metadata":{},"sourceType":"module"}